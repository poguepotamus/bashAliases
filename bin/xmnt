#drives -
  alias drives='sudo fdisk -l'
  selected=""
  mntDir='/media'
  tried='0'
  getx () {
    x=""
    read -p "$1" -n 1 x; while read -n 1 -t .01 y; do x="$x$y"; done
    echo " "
  }
  getyn () {
    y/n=""
    getx "[y/n]: "
    case $x in
      y|Y|n|N)
        y/n=$x
      ;;
      q|Q)
        quitProgram
      ;;
      *)
        echo "You can either say y for yes, or n for no. Please try again. [q] to quit"
      ;;
    esac
  }
  resetMntInfo () {
    mntDriveDir=''
    mntDriveType=''
    mntDriveName=''
  }
  resetMntInfo
  getmntInfoText () {
    getmntType
    getmntDir
    getmntName
  }
  getmntType () {
    while [[ $mntDriveType == "" ]]; do
      read -p "What is the drive's type? " mntDriveType
    done
    if [[ $mntDriveType == ![["vfat" || "test"]] ]]; then
      echo "[$mtnDriveType] not a recognised drive type, are you sure you want to continue?"
      getyn
    elif [[ "$mntDriveType" == [["exit" || "quit"]] ]]; then
      quitProgram
    fi
  }
  getmntDir () {
    while [[ $mntDriveDir == "" ]]; do
      read -p "What is the drive's directory? i.e. /dev/[dir] : " mntDriveDir
    done
    if [[ "$mntDriveType" == [["exit" || "quit"]] ]]; then
      quitProgram
    fi
  }
  getmntName () {
    while [[ $mntDriveName == "" ]]; do
      read -p "What do you want the drive's name to be? " mntDriveName
    done
    if [[ "$mntDriveType" == [["exit" || "quit"]] ]]; then
      quitProgram
    fi
  }
  mntSelect-c () {
    echo "Please select an option:"
    echo "  1. Select"
    echo "  2. Text input"
    echo "  3. Profiles"
    echo "  q. Quit"
  }
  mntSelect () {
    while [[ 1 ]]; do
      mntSelect-c; getx " : "; case "$x" in
        1)
          mntSelect-s "1. Select"
          break
        ;;
        2)
          mntSelect-2 "2. Text input"
          break
        ;;
        3)
          mntSelect-3 "3. Profiles"
          break
        ;;
        q|Q)
          quitProgram
        ;;
        *)
          ((tries+=1))
          clear; echo "You didn't choose a valid option. Please try again."; echo "You have tried $tries times, press [q] to exit"; echo ""
        ;;
      esac
    done
  }
  mntSelect-s-c () {
    echo "$prevSel"; echo " :"
    echo "Please select a drive type:"
    echo "  1. vfat"
    echo "  c. Custom"
    echo "  b. Back"
    echo "  q. Quit"
  }
  mntSelect-s () {
    prevSel="$1"
    while [[ 1 ]]; do
      mntSelect-s-c; getx " : "; case "$x" in
        1)
          mntSelect-2s 1.  vfat
        ;;
        c|C)
          getmntType
        ;;
        b|B)
          mntSelect
        ;;
        q|Q)
          quitProgram
        ;;
        *)
          ((tries+=1))
          clear; echo "You didn't choose a valid option. Please try again."; echo "You have tried $tries times, press [q] to exit"; echo ""
        ;;
      esac
    done
  }
  mntSelect-2s-c () {
    resetListInfo
    echo "Please select a drive directory:"
    echo "  1. /dev/sdb1"
    echo "  2. /dev/sdc1"
    echo "  b. Back"
    echo "  q. Quit"
  }
  mntSelect-2s () {
    while [[ "$selected" == "" ]]; do
      mntSelect-2s-c; getx " : "; case "$x" in
        1)
          mntDriveDir="sdb1"
          getmntName
        ;;
        2)
          mntDriveDir="sdc1"
          getmntName
        ;;
        b|B)
          mntSelect-s
        ;;
        q|Q)
          quitProgram
        ;;
        *)
          clear; echo "You didn't choose a valid option. Please try again."
        ;;
      esac
    done
  }
  #getmntInfo () {
  #  x=''
  #  mntDriveType=''
  #  mntDriveDir=''
  #  clear; drives
  #  outputDrivePresets
  #                 tried="1"
  #  #if [[ "$x" == y* ]] || [[ "$x" == n* ]]; then
  #  #IF [[ "$x" == [["1" || "2"]]]]
  #  case "$x" in
  #    mntDriveName=''
  #    1)
  #      mntDriveType="vfat"
  #      mntDriveDir="sdb1"
  #    ;;
  #    2)
  #      mntDriveType="vfat"
  #      mntDriveDir="sdc1"
  #    ;;
  #    3)
  #      mntDriveType="vfat"
  #    ;;
  #    o|O|0)
  #      externalPreset=""
  #      while [[ preset == "" ]]; then
  #        read -p "Please enter the external preset: " externalPreset
  #        case "$externalPreset"

  #      case
  #    ;;
  #    c|C)
  #      #DO NOTHING
  #    ;;
  #    m|M)
  #      mntDriveName="makeDrive"
  #    ;;
  #    q|Q)
  #      kill -INT $$
  #    ;;
  #    *)
  #      tried="1"
  #      clear
  #      echo "You didn't choose a valid option"
  #      getmntInfo
  #    ;;
  #  esac
  #}
  mntDrive () { #Needs drive type, name, and direcotry to mount. Can get with getmntInfo.
    sudo mkdir "$mntDir"/"$mntDriveName"
    sudo mount -t "$mntDriveType" /dev/"$mntDriveDir" "$mntDir"/"$mntDriveName"
    cd "$mntDir"/"$mntDriveName"
  }
  mnt () {
    clear
    mntSelect
  }
  getumntInfo () {
    numDrives=$(numInDir "$mntDir")
    #if [[ numDrives == 0 ]]; then
      #umntDriveFullDir='$(find "$mntDir"/* -maxdepth 0 type -d)'
    ls -l /home/alex/mnt
    read -p "Which drive would you like to unmount? " umntDriveName
  }
  umntDrive () {
    if [[ $(pwd) == "$mntDir"/"$umntDriveName"* ]]; then
      cd "$mntDir"
    fi
    sudo umount "$mntDir"/"$umntDriveName"
    sudo rmdir "$mntDir"/"$umntDriveName"
    sync
  }
  umnt () {
    getumntInfo
    wait
    umntDrive
  }
  umntDriveForce () {
    if [[ $(pwd) == "$mntDir"/"$umntDriveName"* ]]; then
      cd "$mntDir"
    fi
    sudo umount -l "$mntDir"/"$umntDriveName"
    sudo rmdir "$mntDir"/"$umntDriveName"
    sync
  }
  umntForce () {
    getumntInfo
    wait
    umntDriveForce
  }
  mdmnt () {
    mntDriveName=$makeDriveName
    mntDriveDir=$makeDriveDir
    mntDriveType=$makeDriveType
    mntDrive
  }
  umdmnt () {
    mntDriveName=$makeDriveName
    umntDrive
  }
  umdmntForce () {
    mntDriveName=$makeDriveName
    umntDriveForce
  }
