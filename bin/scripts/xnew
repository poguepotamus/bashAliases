#!/bin/bash
# T2.Lshell
# requirements -
  # xnew$$ file in $programsFolder

# import -

# notes -
  # Use this xprogram to create a few script file or a new bash file.

# code -
  programsFolder="/home/alex/customBash"
  newFileFolder=""$programsFolder"/bin/.templates"

  xnewHelp () {
    echo "xnew:
      -b, --bash <scriptName>
        Creates a new bash file in /home/alex/customBash/bin/working
        Takes one argument being the name of the new bash file

      -c, --c++ <scriptDirectoryAndName>
        Creates a new c++ file and puts it into the specified directory
        This argument uses 'cp', if no name is spcified, the name will be "newC"

      -s, --script <scriptName>
        Creates a new script file in /home/alex/customBash/bin/scripts/working
        Takes one argument being the name of the new bash script

      -h, --help
        Displays this help message

      <default>
        This xprogram doesn't accept no parameters
    "
  }

  if [[ $# -eq 0 ]]; then
    echo "Arguments required"; xnewHelp
  fi; while [[ $# -gt 0 ]]; do
    key="$1"
    case $key in
      -b|--bash)
        cp -i ""$newFileFolder"/xnewBash" ""$programsFolder"/bin/working/"$2"" # Creates a new file from xnewBash in .templates to the bash working directory
        shift
      ;;

      -c|--c++)
        cp -i ""$newFileFolder"/xnewC" "$2" # Creates a new file from xnewC in .templates to the specified directory
        shift
      ;;

      -s|--script)
        cp -i ""$newFileFolder"/xnewScript" ""$programsFolder"/bin/scripts/working/"$2"" # Creates a new file from xnewScripts in .template to the scritps working directoy
        chmod +x ""$programsFolder"/bin/scripts/working/"$2""
        shift
      ;;

      -h|--help)
        xnewHelp
      ;;

      *)
        xnewHelp
      ;;
    esac
    shift
  done
  cd "$customBashFolder"
