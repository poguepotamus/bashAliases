#T2ouV16.0713.1016.shell
#testing -
  alias FTM='echo This is the First test message; wait; alias test=STM'
  alias STM='echo This is the Second test message; wait; alias test=FTM'
  alias test='FTM'
#This is a test to github
#bash_notes
  #Standby alias
  #Lines function
  #Chrome functions where chrome --new $site --old $site --newtab

#chrome -
  user=0
  minbox='https://inbox.google.com/u/0/'
  xinbox='https://inbox.google.com/u/1/'
  gmail='https://mail.google.com/mail/u/2/'
  ymail='https://mail.yahoo.com/'
  slack='https://devict.slack.com/messages/'
  facebook='https://www.facebook.com/'
  todoist='https://todoist.com/app/'
  keep='https://keep.google.com/'
  calendar='https://calendar.google.com/'
  github='https://github.com/'
  contacts='https://contacts.google.com/'
  blackboard='https://blackboard.wichita.edu/'
  webassign='https://webassign.net/login.html/'
  mywsu='https://www.wichita.edu/'
  makedrive='https://drive.google.com/drive/u/2/starred'
  mcp='https://makeict.greenlightgo.org:444'
  makeict='https://makeict.org/'
  WA='https://members.makeict.org/'
  makewiki='makeict.org/wiki'
  chess='https://www.chess.com/'
  music='https://play.google.com/music/listen?u=0'

  alias minbox='chromium $minbox'
  alias newminbox='chromium; wait; minbox'
  alias xinbox='chromium $xinbox'
  alias newxinbox='chromium; wait; xinbox'
  alias gmail='chromium $gmail'
  alias newgmail='chromium; wait; gmail'
  alias ymail='chromium $ymail'
  alias newymail='chromium; wait; ymail'
  alias slack='chromium $slack'
  alias newslack='chromium; wait; slack'
  alias facebook='chromium $facebook'
  alias newfacebook='chromium; wait; facebook'
  alias todoist='chromium $todoist'
  alias newtodoist='chromium; wait; todoist'
  alias keep='chromium $keep'
  alias newkeep='chromium; wait; keep'
  alias calendar='chromium $calendar'
  alias newcalendar='chromium; wait; calendar'
  alias github='chromium $github'
  alias newgithub='chromium; wait; github'
  alias contacts='chromium $contacts'
  alias newcontacts='chromium; wait; contacts'
  alias blackboard='chromium $blackboard'
  alias newblackboard='chromium; wait; blackboard'
  alias webassign='chromium $webassign'
  alias newwebassign='chromium; wait; webassign'
  alias mywsu='chromium $mywsu'
  alias newmywsu='chromium; wait; mywsu'
  alias makedrive='chromium $makedrive'
  alias makedrive='chromium; wait; makedrive'
  alias mcp='chromium $mcp'
  alias newmcp='chromium; wait; mcp'
  alias makeict='chromium $makeict'
  alias newmakeict='chromium; wait; makeict'
  alias WA='chromium $WA'
  alias newWA='chromium; wait; WA'
  alias makewiki='chromium $makewiki'
  alias newmakewiki='chromium; wait; makewiki'
  alias chess='chromium $chess'
  alias newchess='chromium; wait; chess'
  alias music='chromium $music'
  alias newmusic='chromium; wait; music'

  alias newtab='chromium 'chrome://newtab'; wait'
  alias chrome='chromium'

    #quickSetups
      alias communications='minbox; xinbox; gmail; ymail; slack; facebook; keep; calendar'
  #programs -
    alias pdf='evince'
    alias word='libreoffice --writer'
    alias hangouts='/usr/bin/chromium --profile-directory=Default --app-id=knipolnnllmklapflnccelgolnpehhpl'
    #games -
      alias games='cat ~/games/games'
      alias gameFdepths='~/games/fdepths/fdepths'
      alias gameSST='~/games/sst/sst'
      alias gameSst='~/games/sst/sst'
      alias gamesst='~/games/sst/sst'
      alias gameSudoku='~/games/sudoku/nsudoku'
      alias gameEmpire='~/games/empire/vms-empire'
      alias gameCmines='~/games/cgames/cmines/cmines'
      alias gameCsokoban='~/games/cgames/csokoban/csokoban'
      alias gameCblocks='~/games/cgames/cblocks/cblocks'
      alias gameUnnethack='~/unnethack/bin/unnethack'
  #xprograms -
    #notes -
      notesDir='/home/alex/Dropbox/matthew'
      notesFile=''$notesDir'/notes.txt'
      alias notes='cat $notesFile; wait; echo '''
      alias touchNotes='touch $notesFile'
      alias removeAllNotes='touchNotes; wait; rm $notesFile'
      alias addnote='touchNotes; wait; echo "$1" >> $notesFile'
      alias addNote='touchNotes; wait; echo "$1" >> $notesFile'
      alias addnotes='touchNotes; wait; echo "$1" >> $notesFile'
      alias addNotes='touchNotes; wait; echo "$1" >> $notesFile'
      alias noteline='touchNotes; wait; echo "" >> $notesFile'
      alias noteLine='touchNotes; wait; echo "" >> $notesFile'
      alias editnotes='touchNotes; wait; vim $notesFile'
      alias editNotes='touchNotes; wait; vim $notesFile'
      alias geanynotes='touchNotes; wait; geany $notesFile'
      alias geanyNotes='touchNotes; wait; geany $notesFile'
    #blogIdeas -
      blogDir='/home/alex/Dropbox/matthew/blog/'
      blogIdeasFile=''$blogDir'/blog.ideas'
      alias touchBlogIdeas='touch $blogIdeasFile'
      alias blogIdeas='touchBlogIdeas; wait; cat $blogIdeasFile'
      alias blogideas='touchBlogIdeas; wait; cat $blogIdeasFile'
      alias editblogideas='touchBlogIdeas; wait; vim $blogIdeasFile'
      alias editBlogideas='touchBlogIdeas; wait; vim $blogIdeasFile'
      alias editBlogideas='touchBlogIdeas; wait; vim $blogIdeasFile'
      alias editBlog='touchBlogIdeas; wait; vim $blogIdeasFile'
      alias blogIdea='touchBlogIdeas; wait; echo "$1" >> $blogIdeasFile'
      alias blogidea='touchBlogIdeas; wait; echo "$1" >> $blogIdeasFile'
      alias addBlogIdea='touchBlogIdeas; wait; echo "$1" >> $blogIdeasFile'
      alias addBlogIdeas='touchBlogIdeas; wait; echo "$1" >> $blogIdeasFile'
      alias addblogidea='touchBlogIdeas; wait; echo "$1" >> $blogIdeasFile'
    #fun -
      #battery -
        b1='echo |-------------------------------------------------------|- BATTERY -|-------------------------------------------------------|'
        alias bat='$b1;upower -i /org/freedesktop/UPower/devices/battery_BAT1| grep -E "state|to\ full|percentage"'
        alias batInfo='upower -i /org/freedesktop/UPower/devices/battery_BAT1'
      #Weather -
        w1='echo |- - - - - - - - - - - - - - - - - - - - - - - - - - - -|- WEATHER -|- - - - - - - - - - - - - - - - - - - - - - - - - - - -|'
        w2='echo |---------------------------------------------------------------------------------------------------------------------------|'
        alias weather='$w2;$w1;$w2;curl wttr.in'
      #time/date -
        alias curtime='date'
        alias now='date'
        alias curTime='date'
  #bash -
    alias quitProgram="kill -INT $$"
    numInDir () {
      find "$1"/* -maxdepth 0 -type d | wc -l
    }
    numDrives () {
      numInDir $mntDir
    }
    getx () {
      x=''
      read -p ": " -n 1 x; while read -n 1 -t .01 y; do x="$x$y"; done
      echo " "
    }
    resetListInfo () {
      echo "$selected"
      selected=""
      tried="0"
    }
    youSelected () {
      echo "$1"
      echo "$selected"
      echo " :"
    }
    #testing -
      checkVar=''
      setCheck () {
        checkVar=$1
      }
      check () {
        eval checking=\$$checkVar
        echo "$checking"
      }
      alias ck=check
      bashTest () {
        . /home/alex/customBash/testBash
      }
      alias bashtest="bashTest"
    #drives -
      alias drives='sudo fdisk -l'
      selected=""
      mntDir='/media'
      tried='0'
      resetMntInfo () {
        mntDriveDir=''
        mntDriveType=''
        mntDriveName=''
      }
      resetMntInfo
      getmntInfoText () {
        getmntType
        getmntDir
        getmntName
      }
      getmntType () {
        while [[ $mntDriveType == "" ]]; do
          read -p "What is the drive's type? " mntDriveType
        done
        if [[ "$mntDriveType" == [["exit" || "quit"]] ]]; then
          quitProgram
        fi
      }
      getmntDir () {
        while [[ $mntDriveDir == "" ]]; do
          read -p "What is the drive's directory? i.e. /dev/[dir] : " mntDriveDir
        done
        if [[ "$mntDriveType" == [["exit" || "quit"]] ]]; then
          quitProgram
        fi
      }
      getmntName () {
        while [[ $mntDriveName == "" ]]; do
          read -p "What do you want the drive's name to be? " mntDriveName
        done
        if [[ "$mntDriveType" == [["exit" || "quit"]] ]]; then
          quitProgram
        fi
      }
      mntSelect-c () {
        echo "Please select an option:"
        echo "  1. Select"
        echo "  2. Text input"
        echo "  3. Profiles"
        echo "  q. Quit"
      }
      mntSelect () {
        while [[ "$selected" == "" ]]; do
          mntSelect-c; getx; case "$x" in
            1)
              mntSelect-1
              youSelected "1. Select"
            ;;
            2)
              mntSelect-2
              youSelected "2. Text input"
            ;;
            3)
              mntSelect-3
              youSelected "3. Profiles"
            ;;
            q|Q)
              quitProgram
            ;;
            *)
              clear; echo "You didn't choose a valid option. Please try again."
            ;;
          esac
        done
      }
      mntSelect-s-c () {
        resetListInfo
        echo "Please select a drive type:"
        echo "  1. vfat"
        echo "  b. Back"
        echo "  q. Quit"
      }
      mntSelect-s () {
        while [[ "$selected" == "" ]]; do
          mntSelect-1-c; getx; case "$x" in
            1)
              mntDriveType="vfat"
              youSelected "1. vfat"
            ;;
            b|B)
              youSelected "back"
              mntSelect
            ;;
            q|Q)
              quitProgram
            ;;
            *)
              clear; echo "You didn't choose a valid option. Please try again."
            ;;
          esac
        done
      }
      mntSelect-2s-c () {
        resetListInfo
        echo "Please select a drive directory:"
        echo "  1. /dev/sdb1"
        echo "  2. /dev/sdc1"
        echo "  b. Back"
        echo "  q. Quit"
      }
      mntSelect-2s () {
        while [[ "$selected" == "" ]]; do
          mntSelect-2s-c; getx; case "$x" in
            1)
              mntDriveDir="sdb1"
              youSelected "1. dev/sdb1"
            ;;
            2)
              mntDriveDir="sdc1"
              youSelected "2. /dev/sdc1"
            ;;
            b|B)
              youSelected "back"
              mntSelect-s
            ;;
            q|Q)
              quitProgram
            ;;
            *)
              clear; echo "You didn't choose a valid option. Please try again."
            ;;
          esac
        done
      }
      #getmntInfo () {
      #  x=''
      #  mntDriveType=''
      #  mntDriveDir=''
      #  clear; drives
      #  outputDrivePresets
      #                 tried="1"
      #  #if [[ "$x" == y* ]] || [[ "$x" == n* ]]; then
      #  #IF [[ "$x" == [["1" || "2"]]]]
      #  case "$x" in
      #    mntDriveName=''
      #    1)
      #      mntDriveType="vfat"
      #      mntDriveDir="sdb1"
      #    ;;
      #    2)
      #      mntDriveType="vfat"
      #      mntDriveDir="sdc1"
      #    ;;
      #    3)
      #      mntDriveType="vfat"
      #    ;;
      #    o|O|0)
      #      externalPreset=""
      #      while [[ preset == "" ]]; then
      #        read -p "Please enter the external preset: " externalPreset
      #        case "$externalPreset"

      #      case
      #    ;;
      #    c|C)
      #      #DO NOTHING
      #    ;;
      #    m|M)
      #      mntDriveName="makeDrive"
      #    ;;
      #    q|Q)
      #      kill -INT $$
      #    ;;
      #    *)
      #      tried="1"
      #      clear
      #      echo "You didn't choose a valid option"
      #      getmntInfo
      #    ;;
      #  esac
      #}
      mntDrive () { #Needs drive type, name, and direcotry to mount. Can get with getmntInfo.
        sudo mkdir "$mntDir"/"$mntDriveName"
        sudo mount -t "$mntDriveType" /dev/"$mntDriveDir" "$mntDir"/"$mntDriveName"
        cd "$mntDir"/"$mntDriveName"
      }
      mnt () {
        getmntInfo
        wait
        mntDrive
      }
      getumntInfo () {
        numDrives=$(numInDir "$mntDir")
        #if [[ numDrives == 0 ]]; then
          #umntDriveFullDir='$(find "$mntDir"/* -maxdepth 0 type -d)'
        ls -l /home/alex/mnt
        read -p "Which drive would you like to unmount? " umntDriveName
      }
      umntDrive () {
        if [[ $(pwd) == "$mntDir"/"$umntDriveName"* ]]; then
          cd "$mntDir"
        fi
        sudo umount "$mntDir"/"$umntDriveName"
        sudo rmdir "$mntDir"/"$umntDriveName"
        sync
      }
      umnt () {
        getumntInfo
        wait
        umntDrive
      }
      umntDriveForce () {
        if [[ $(pwd) == "$mntDir"/"$umntDriveName"* ]]; then
          cd "$mntDir"
        fi
        sudo umount -l "$mntDir"/"$umntDriveName"
        sudo rmdir "$mntDir"/"$umntDriveName"
        sync
      }
      umntForce () {
        getumntInfo
        wait
        umntDriveForce
      }
      mdmnt () {
        mntDriveName=$makeDriveName
        mntDriveDir=$makeDriveDir
        mntDriveType=$makeDriveType
        mntDrive
      }
      umdmnt () {
        mntDriveName=$makeDriveName
        umntDrive
      }
      umdmntForce () {
        mntDriveName=$makeDriveName
        umntDriveForce
      }
    #preferences -
      alias ll='ls -l'
      alias lall='ls -l -a'
      alias lal='ls -l -a'
      alias del='rm -rf'
    #reload -
      alias bashreset='reset; wait; exec bash'
      alias updateBash='exec bash'
      alias updatebash='exec bash'
  #projects -
    BDPDir='/home/alex/dropbox/matthew/projects/keepTalking/programFiles'
    alias projectBDP='echo "atom $BDPDir"; wait; cd $BDPDir'
    #bash -
      BA=/home/alex/customBash/bashAliases
      alias bashAliases='atom $BA'
      alias bashAlias='atom $BA'
      alias projectAliases='atom $BA'
      alias projectAlias='atom $BA'
      alias geanyAliases='geany $BA'
      alias geanyAlias='geany $BA'
      alias editAliases='vim $BA'
      alias editAlias='vim $BA'
    #csgoCustomConfig
      pcsDir='~/customConfig'
      alias pcs='atom $pcsDir; wait; cd $pcsDir'
      #website -
        websiteLocalDir='/home/alex/Dropbox/matthew/projects/website1'
        websiteHTMLFile=''$websiteLocalDir'/index.html'
        #exec 'projectWebsite1/projectWebsite1Setup'
      #makeICT -
        alias keyInfo='mcp; WA'
        alias mscMake='makedrive; makeict; wiki'
        #makerMondays -
          alias makerMondays='keyInfo; mscMake'
          alias makerMonday='keyInfo; mscMake'
        #keys -
          curNameListDir='/home/alex/Dropbox/matthew/makeict/projects/keys/zt'
          curNameList=''$curNameListDir'/nameList.txt'
          PDFFile=''$curNameListDir'/EPSON001.PDF'
          quickFormPDFDir='/media/alex/makeDrive'
          quickFormPDF=''$quickFormPDFDir'/EPSON001.PDF'
          alias quickAutoKeyForms=quickAutoKeyFormsFunction
            quickAutoKeyForms () {
              PDFFile="$quickFormPDF"
              autoKeyFormsFunction
              PDFFile=''$curNameListDir'/EPSON001.PDF'
            }
          alias autoKeyForms=autoKeyFormsFunction
            autoKeyFormsFunction () {
              page=1
              input="$curNameList"
              while IFS= read -r name
              do
                pdftk "$PDFFile" cat $page output "$name.pdf"
                ((page+=1))
              done < "$input"
            }
          alias giveKey='makeNameList; wait; echo $1 >> '$curNameList''
          alias givekey='makeNameList; wait; echo $1 >> '$curNameList''
          alias givenKeys='makeNameList; wait; cat '$curNameList''
          alias editKeys='makeNameList; wait; vim '$curNameList''
          alias makeNameList='touch '$curNameList''
        #cashBo -
          alias projectCashBox='atom ~/Dropbox/makeict/cashBox; /home/alex/Downloads/arduino-1.6.9/arduino; cd ~/Dropbox/makeict/cashBox'
      #school -
        alias school='cd Dropbox/matthew/school/csu2016/calcII; newMyWSU; blackboard; webassign'
      #xpass -
        xpassDir='Dropbox/matthew/security'
        alias projectXpass='cd $xpassDir; atom $xpassDir'
